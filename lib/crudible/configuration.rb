module Crudible
  # This class holds the configuration for Crudible as set by the user. It can
  # be set using an initializer in Rails, for example:
  #
  #   Crudible.configure do |config|
  #     config.edit_link_class = 'btn btn-primary'
  #   end
  #
  class Configuration
    # The html class to apply for the new link generated by the resource_menu
    # helper. For example, if using bootstrap, this could be 'btn btn-primary'
    attr_accessor :new_link_class

    # The html class to apply for the edit link generated by the resource_menu
    # helper. For example, if using bootstrap, this could be 'btn btn-primary'
    attr_accessor :edit_link_class

    # The html class to apply for the destroy link generated by the
    # resource_menu helper. For example, if using bootstrap, this could be
    # 'btn btn-danger'
    attr_accessor :destroy_link_class

    # The html class to apply for the move links generated by the move_menu
    # helper. For example, if using bootstrap, this could be 'btn btn-danger'
    attr_accessor :move_link_class

    # The html class to apply for disabled links generated by the move_menu
    # helper.
    attr_accessor :disabled_link_class

    # This method is called when a link is generated. The method and resource
    # are supplied as arguments. For example, if using Pundit you could do this:
    #
    #   config.auth_callback = ->(resource, action) {
    #     policy(resource, "#{action}?")
    #   }
    attr_accessor :auth_callback

    def initialize
      self.new_link_class = ''
      self.edit_link_class = ''
      self.destroy_link_class = ''
      self.move_link_class = ''
      self.disabled_link_class = 'disabled'
      self.auth_callback = -> { return true }
    end
  end
end
